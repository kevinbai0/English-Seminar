{"version":3,"file":"static/webpack/static/development/pages/commentators.js.ed5e54da6a2d89499641.hot-update.js","sources":["webpack:///./src/components/CommentatorPage.js","webpack:///./src/components/NavigationBar.js"],"sourcesContent":["import React from \"react\";\nimport {Transition} from \"react-transition-group\";\nimport CommentatorSplashPage from \"./CommentatorSplashPage\";\nimport anime from \"animejs\";\nimport EvidencePage from \"./EvidencePage\";\nimport data from \"../js/data\";\nimport ThesisPage from \"./ThesisPage\";\nimport seminarStyle from \"../style\";\nimport NavigationBar from \"./NavigationBar\";\nclass CommentatorPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.commentatorSplashRef = React.createRef();\n        this.state = {\n            isAnimated: false\n        }\n    }\n\n    componentDidMount() {\n        window.scrollTo({top: 0, behavior: \"smooth\"})\n    }\n\n    componentDidUpdate() {\n        if (this.state.isAnimated) {\n            console.log(\"Is animated\");\n            anime({\n                targets: this.commentatorSplashRef.current,\n                translateX: -window.innerWidth / 2,\n                opacity: [1,0],\n                duration: 4000,\n                easing: \"easeInOutQuad\"\n            })\n        }\n    }\n    render() {\n        console.log(this.state.isAnimated);\n        return <div className=\"commentator-page\">\n            <NavigationBar />\n            {seminarStyle}\n            <div style={{\n                opacity: this.state.isAnimated ? 1 : 0,\n                transition: \"all 0.5s ease\"\n            }}>\n                {this.props.navigationBar}\n            </div>\n            <Transition in={!this.state.isAnimated} timeout={4000}>\n                {(state) => {\n                    return <CommentatorSplashPage \n                        state={state}\n                        shouldAnimate={!this.state.isAnimated}\n                        animationsFinished={this.animationsFinished.bind(this)} \n                        reference={this.commentatorSplashRef}\n                    />\n                }}\n            </Transition>\n            <Transition in={this.state.isAnimated} timeout={4000}>\n                {(state) => <EvidencePage subprongs={data.Commentator} state={state}/>}\n            </Transition>\n        </div>\n    }\n\n    animationsFinished() {\n        this.setState({\n            isAnimated: true\n        })\n        console.log(\"Finished\");\n    }\n}\n\nexport default CommentatorPage;","import React , { Component } from \"react\";\nimport Link from \"next/link\";\nconst NavItem = (props) => {\n\treturn <div className={props.className}>\n\t\t<Link href={props.link}><a>{props.title}</a></Link>\n\t</div>\n}\n\nclass NavigationBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\twidth: window.innerWidth\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"resize\", this.resizeListener);\n\t}\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"resize\", this.resizeListener);\n\t}\n\n\tresizeListener = () => {\n\t\tthis.setState({\n\t\t\twidth: window.innerWidth\n\t\t})\n\t}\n\trender() {\n\t\tif (this.state.width >= 800) {\n\t\t\treturn <nav>\n\t\t\t\t<div className=\"nav-items\">\n\t\t\t\t\t{this.props.navItems.map((item, i) => {\n\t\t\t\t\t\tvar className = \"nav-item\";\n\t\t\t\t\t\tif (i === this.props.selected) className += \" selected\";\n\t\t\t\t\t\tif(!this.props.lightBar) className += \" dark\";\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn <NavItem key={i} title={item.name} className={className} selected={this.props.selected === i} link={item.link}/>\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t}\n\t\treturn <nav>\n\t\t\t<HamburgerNavigation navItems={this.props.navItems} colorState={this.props.lightBar ? \"light\" : \"dark\"} />\n\t\t</nav>\n\t}\n}\n\nexport default NavigationBar;\n\n\nclass HamburgerNavigation extends Component {\n\tdefault = \"default\";\n\texpanded = \"expanded\";\n\tfirstLoad = true;\n\tlast = this.default;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thamburgerState: this.default,\n\t\t}\n\t}\n\trender() {\n\t\tlet classAddonNav = this.state.hamburgerState === this.default ? \"nav-hidden\" : \"animated bounceInDown nav-shown\";\n\t\tif (this.firstLoad) {\n\t\t\tclassAddonNav = \"nav-hidden\";\n\t\t\tthis.firstLoad = false;\n\t\t}\n\t\tlet classAddonItem = this.state.hamburgerState === this.default ? \"hidden\" : \"\";\n\t\tlet menuClass = this.state.hamburgerState === this.default ? \"\" : \"open\";\n\n\t\tthis.last = this.state.hamburgerState;\n\t\treturn (\n\t\t\t<div className=\"mobile-nav-container\">\n\t\t\t\t<div id=\"nav-icon\" className={menuClass} onClick={this.toggleHamburger}>\n\t\t\t\t\t<span className={this.props.colorState}></span>\n\t\t\t\t\t<span className={this.props.colorState}></span>\n\t\t\t\t\t<span className={this.props.colorState}></span>\n\t\t\t\t\t<span className={this.props.colorState}></span>\n\t\t\t\t</div>\n\t\t\t\t<div className={\"mobile-nav-items-container \" + classAddonNav}>\n\t\t\t\t\t{this.props.navItems.map((navItem, i) => {\n\t\t\t\t\t\treturn <div key={i} className={classAddonItem}><Link to={navItem.link} onClick={(e) => this.toggleHamburger}>{navItem.name}</Link></div>\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t\t\n\n\t}\n\n\ttoggleHamburger =() => {\n\t\tthis.setState({\n\t\t\thamburgerState: this.state.hamburgerState === this.default ? this.expanded : this.default\n\t\t})\n\t}\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AACA;AACA;AADA;AAGA;AACA;;;;AAzDA;AACA;AA2DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAcA;AACA;AADA;AAGA;AACA;AAhBA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AACA;AACA;;;AACA;AACA;AACA;;;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AArCA;AACA;AAuCA;AACA;AAEA;;;;;AAMA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAoCA;AACA;AADA;AAGA;AACA;AAtCA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;AAvCA;;;;A","sourceRoot":""}