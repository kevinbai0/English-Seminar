{"version":3,"file":"static/webpack/static/development/pages/index.js.543e8adcf229b35a8598.hot-update.js","sources":["webpack:///./src/components/ThesisPage.js"],"sourcesContent":["import React from \"react\";\nimport anime from \"animejs\";\n\nimport Link from \"next/link\";\n\nclass ThesisPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.captionRef = React.createRef();\n        this.consulterProngRef = React.createRef();\n        this.commentatorProngRef = React.createRef();\n        this.mediatorProngRef = React.createRef();\n        this.prongsContainerRef = React.createRef();\n        this.commentatorSplashRef = React.createRef();\n        this.state = {\n            shouldSwitchPage: false\n        }\n    }\n    async componentDidMount() {\n        if (this.props.scrollState === \"scrolling\") {\n            let commentatorRightOffset = window.innerWidth - this.commentatorProngRef.current.offsetLeft + 20;\n            let consulterLeftOffset = this.consulterProngRef.current.offsetLeft + this.consulterProngRef.current.offsetWidth + 20;\n            anime({\n                targets: this.captionRef.current,\n                opacity: 0,\n                duration: 0\n            })\n            anime({\n                targets: this.commentatorProngRef.current,\n                translateX: [0, commentatorRightOffset],\n                translateY: [0, -200],\n                duration: 0,\n            })\n            anime({\n                targets: this.mediatorProngRef.current,\n                opacity: 0,\n                duration: 0,\n            })\n            anime({\n                targets: this.consulterProngRef.current,\n                translateX: [0, -consulterLeftOffset],\n                translateY: [0, 200],\n                duration: 0\n            })\n        }\n        else if (this.props.scrollState === \"scrolled\") {\n            let result = await this.animateCaptionText();\n            anime({\n                targets: this.commentatorProngRef.current,\n                translateX: 0,\n                translateY: 0,\n                duration: 1000,\n            })\n            anime({\n                targets: this.mediatorProngRef.current,\n                opacity: 1,\n                duration: 1000,\n            })\n            anime({\n                targets: this.consulterProngRef.current,\n                translateX: 0,\n                translateY: 0,\n                duration: 1000\n            })\n        }\n    }\n    componentDidUpdate() {\n        let prongTarget;\n        let sideTargets = [];\n        if (this.state.shouldSwitchPage) {\n            let timeline = anime.timeline();\n            timeline.add({\n                targets: this.commentatorSplashRef.current,\n                translateX: -window.innerWidth,\n                duration: 5000,\n                easing: \"easeInQuad\",\n                delay: 100\n            }).add({\n                targets: this.commentatorSplashRef.current,\n                opacity: [1,0],\n                duration: 2000,\n                easing: \"easeInQuad\",\n                offset: \"-=2000\",\n            })\n            anime({\n                targets: prongTarget,\n                opacity: [1,0],\n                duration: 0,\n            })\n            \n            return;\n        }\n    }\n    render = () => {\n        return <div className=\"thesis-component\" style={{\n            height: this.props.currentProng ? \"100vh\" : \"auto\"\n        }} ref={this.props.reference}>\n            <div className=\"caption\" ref={this.captionRef}><span className=\"emphasis\">Both</span><span> characters provide the same function in </span><span className=\"emphasis\">both</span><span> plays.</span></div>\n            <div className=\"prongs-container\" ref={this.prongsContainerRef}>\n                <Link href={{pathname:\"/consulters\", state: {shouldUpdate: true }}}><a><div className=\"prong prong1\" ref={this.consulterProngRef}>The <span className=\"emphasis\">Consulter</span></div></a></Link>\n                <Link href={{pathname:\"/mediators\", state: {shouldUpdate: true }}}><a><div className=\"prong prong2\" ref={this.mediatorProngRef}>The <span className=\"emphasis\">Mediator</span></div></a></Link>\n                <Link href=\"/commentators\"><a><div className=\"prong prong3\" ref={this.commentatorProngRef}>The <span className=\"emphasis\">Commentator</span></div></a></Link>\n            </div>\n        </div>\n    }\n\n    async animateCaptionText() {\n        let texts = [\"Both\", \" characters provide the same role in \", \"both\", \" plays.\"];\n        let caption = this.captionRef.current;\n        caption.style.opacity = 1;\n        let elements = caption.getElementsByTagName(\"span\");\n        let timeCounter = 0;\n        let allPromises = [];\n        for (let e = 0; e < elements.length; e++) {\n            let elementText = texts[e];\n            elements[e].innerHTML = \"\";\n            for (let i = 0; i < elementText.length ;i++) {\n                let localCounter = timeCounter++;\n                let promise = new Promise((res, rej) => setTimeout(() => {\n                    elements[e].innerHTML += elementText[i];\n                    res(\"Good\");\n                }, localCounter * 100));\n                allPromises.push(promise);\n            }\n        }\n        await Promise.all(allPromises);\n        return true;\n    }\n\n    animationsFinished() {\n        this.setState({\n            shouldSwitchPage: true\n        })\n    }\n}\n\nexport default ThesisPage;\n\n\n/*if (this.props.currentProng === \"Commentator\") {\n            this.commentatorProngRef.current.style.zIndex=100;\n            this.mediatorProngRef.current.style.zIndex=99;\n            this.consulterProngRef.current.style.zIndex=98;\n            prongTarget = this.commentatorProngRef.current;\n            sideTargets = [this.consulterProngRef.current, this.mediatorProngRef.current];\n        }*/\n\n/* \nif (this.props.currentProng) {\n            // get deltaX for left to middle\n            let dXLeft = this.mediatorProngRef.current.offsetLeft - this.consulterProngRef.current.offsetLeft;\n            let dXRight = this.mediatorProngRef.current.offsetLeft - this.commentatorProngRef.current.offsetLeft;\n            \n            let timeline = anime.timeline();\n            timeline.add({\n                targets: this.captionRef.current,\n                translateY: -this.captionRef.current.offsetTop,\n                duration: 1000,\n                offset: 1000,\n                easing: \"easeInQuad\"\n            }).add({\n                targets: this.consulterProngRef.current,\n                left: dXLeft,\n                duration: 1000,\n                offset: 1500,\n                easing: \"easeOutQuad\"\n            }).add({\n                targets: this.commentatorProngRef.current,\n                translateX: dXRight,\n                duration: 1000,\n                offset: 1500,\n                easing: \"easeOutQuad\",\n                complete: () => {\n                    this.consulterProngRef.current.className = \"prong remove-box-shadow\";\n                    this.commentatorProngRef.current.className = \"prong remove-box-shadow\";\n                    this.mediatorProngRef.current.className = \"prong remove-box-shadow\";\n                }\n            }).add({\n                targets: prongTarget,\n                color: () => {\n                    if (prongTarget == this.commentatorProngRef.current) {\n                        return \"#FD6B6B\";\n                    }\n                },\n                duration: 1000,\n                offset: 2000\n            }).add({\n                targets: prongTarget,\n                right: () => {\n                    if (prongTarget == this.commentatorProngRef.current) {\n                        return [\"5vw\", \"35.5vw\"];\n                    }\n                },\n                translateX: () => {\n                    if (prongTarget == this.commentatorProngRef.current) {\n                        return  0;\n                    }\n                },\n                top: () => {\n                    if (prongTarget == this.commentatorProngRef.current) {\n                        return [\"10vw\", \"-19.4vw\"];\n                    }\n                },\n                backgroundColor: \"rgba(255,255,255,0)\",\n                fontSize: () => {\n                    if (prongTarget == this.commentatorProngRef.current) {\n                        return [\"2.5vw\", \"6.38vw\"];\n                    }\n                },\n                duration: 1000,\n                offset: 3000,\n                easing: \"easeInOutQuad\"\n            }).add({\n                targets: sideTargets,\n                opacity: 0,\n                duration: 1000,\n                offset: 2000,\n                complete: () => {\n                    // hide\n                    for (let sideTarget of sideTargets) {\n                        sideTarget.className = \"prong no-box-shadow hidden\";\n                    }\n                }\n            })\n        }\n*/"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAwFA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AARA;AAWA;AACA;;;;;;;;;;;;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;;;;;AAOA;;;;;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;;;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;;;AANA;AAAA;AAOA;;;AAVA;AAAA;AAWA;AACA;;AAAA;AACA;;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;AAhIA;AACA;AAkIA;AAGA;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}